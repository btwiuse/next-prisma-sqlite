import type { NextPage } from "next";
import type { User } from "@prisma/client";
import { useState } from "react";
import Head from "next/head";
import { useUsers } from "hooks/useUsers";
import Form from "components/Form";

const initialValues = {
  name: "",
  email: "",
};

const Home: NextPage = () => {
  const [formData, setFormData] = useState(initialValues);
  const [actionButton, setActionButton] = useState<"save" | "update">("save");
  const { users, isLoading, mutate } = useUsers("/users");

  // Clean form
  const handleClean = () => {
    setFormData(initialValues);
  };

  // Cancel action
  const handleCancel = (e: React.MouseEvent) => {
    e.preventDefault();
    handleClean();
    setActionButton("save");
  };

  // Edit user
  const handleEdit = async (user: User) => {
    setFormData(user);
    setActionButton("update");
  };

  // Save user
  const handleSave = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const response = await fetch("/api/users", {
      method: "POST",
      body: JSON.stringify(formData),
    });
    if (response.status < 300) {
      await response.json();
      mutate();
    }
    setActionButton("save");
    handleClean();
  };

  // Update user
  const handleUpdate = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const response = await fetch("/api/users", {
      method: "PUT",
      body: JSON.stringify(formData),
    });
    if (response.status < 300) {
      await response.json();
      mutate();
    }
    setActionButton("save");
    handleClean();
  };

  // Delete user
  const handleDelete = async (id: string) => {
    const response = await fetch("/api/users", {
      method: "DELETE",
      body: JSON.stringify(id),
    });
    if (response.status < 300) {
      await response.json();
      mutate();
    }
    setActionButton("save");
    handleClean();
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>Next.js with Prisma (SQLite)</h1>

        {isLoading ? (
          <div>
            <p>Loading...</p>
          </div>
        ) : (
          <ul>
            {users.map((user) => (
              <li key={user.id}>
                {user.name} - {user.email}{" "}
                <button onClick={() => handleEdit(user)}>edit</button>{" "}
                <button onClick={() => handleDelete(user.id)}>delete</button>
              </li>
            ))}
          </ul>
        )}

        <Form
          formData={formData}
          setFormData={setFormData}
          onSave={handleSave}
          onUpdate={handleUpdate}
          onCancel={handleCancel}
          actionButton={actionButton}
        />
      </main>
    </>
  );
};

export default Home;
